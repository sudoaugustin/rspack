// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StatsTestCases should print correct stats for performance-different-mode-and-target 1`] = `
"asset warning.pro-web.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = warning.pro-web.js
./index.js 293 KiB [built] [code generated]

WARNING in ⚠ asset size limit: The following asset(s) exceed the recommended size limit (244.141 KiB). This can impact web performance.Assets:
  │   warning.pro-web.js (293.960 KiB)

WARNING in ⚠ entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244.141 KiB). This can impact web performance.Entrypoints:
  │   main (293.960 KiB)
  │       warning.pro-web.js

WARNING in ⚠ Rspack performance recommendations:You can limit the size of your bundles by using import() to lazy load some parts of your application.
  │ For more info visit https://www.rspack.dev/guide/optimization/code-splitting

Rspack x.x.x compiled with 3 warnings in X s

asset warning.pro-webworker.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = warning.pro-webworker.js
./index.js 293 KiB [built] [code generated]

WARNING in ⚠ asset size limit: The following asset(s) exceed the recommended size limit (244.141 KiB). This can impact web performance.Assets:
  │   warning.pro-webworker.js (293.960 KiB)

WARNING in ⚠ entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244.141 KiB). This can impact web performance.Entrypoints:
  │   main (293.960 KiB)
  │       warning.pro-webworker.js

WARNING in ⚠ Rspack performance recommendations:You can limit the size of your bundles by using import() to lazy load some parts of your application.
  │ For more info visit https://www.rspack.dev/guide/optimization/code-splitting

Rspack x.x.x compiled with 3 warnings in X s

asset no-warning.pro-node.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = no-warning.pro-node.js
./index.js 293 KiB [built] [code generated]
Rspack x.x.x compiled successfully in X s

asset no-warning.dev-web.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = no-warning.dev-web.js
./index.js 293 KiB [built] [code generated]
Rspack x.x.x compiled successfully in X s

asset no-warning.dev-node.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = no-warning.dev-node.js
./index.js 293 KiB [built] [code generated]
Rspack x.x.x compiled successfully in X s

asset no-warning.dev-web-with-limit-set.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = no-warning.dev-web-with-limit-set.js
./index.js 293 KiB [built] [code generated]
Rspack x.x.x compiled successfully in X s

asset warning.pro-node-with-hints-set.js 294 KiB [emitted] (name: main)
Entrypoint main 294 KiB = warning.pro-node-with-hints-set.js
./index.js 293 KiB [built] [code generated]

WARNING in ⚠ asset size limit: The following asset(s) exceed the recommended size limit (244.141 KiB). This can impact web performance.Assets:
  │   warning.pro-node-with-hints-set.js (293.960 KiB)

WARNING in ⚠ entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244.141 KiB). This can impact web performance.Entrypoints:
  │   main (293.960 KiB)
  │       warning.pro-node-with-hints-set.js

WARNING in ⚠ Rspack performance recommendations:You can limit the size of your bundles by using import() to lazy load some parts of your application.
  │ For more info visit https://www.rspack.dev/guide/optimization/code-splitting

Rspack x.x.x compiled with 3 warnings in X s"
`;

exports[`StatsTestCases should print correct stats for performance-no-async-chunks-shown 1`] = `
"asset <CLR=32,BOLD>main.js</CLR> 294 KiB <CLR=32,BOLD>[emitted]</CLR> (name: main)
asset <CLR=32,BOLD>sec.js</CLR> 1.16 KiB <CLR=32,BOLD>[emitted]</CLR> (name: sec)
Entrypoint <CLR=BOLD>main</CLR> 294 KiB = <CLR=32,BOLD>main.js</CLR>
Entrypoint <CLR=BOLD>sec</CLR> 1.16 KiB = <CLR=32,BOLD>sec.js</CLR>
<CLR=BOLD>./index.js</CLR> 32 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./index2.js</CLR> 48 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./a.js</CLR> 293 KiB <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./b.js</CLR> 22 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./c.js</CLR> 22 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./d.js</CLR> 22 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>

<CLR=33,BOLD>WARNING</CLR> in <CLR=33>⚠<CLR=0> asset size limit: The following asset(s) exceed the recommended size limit (244.141 KiB). This can impact web performance.
  <CLR=33>│<CLR=0> Assets:
  <CLR=33>│<CLR=0>   main.js (294.045 KiB)
<CLR=0>

<CLR=33,BOLD>WARNING</CLR> in <CLR=33>⚠<CLR=0> entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244.141 KiB). This can impact web performance.
  <CLR=33>│<CLR=0> Entrypoints:
  <CLR=33>│<CLR=0>   main (294.045 KiB)
  <CLR=33>│<CLR=0>       main.js
<CLR=0>

<CLR=33,BOLD>WARNING</CLR> in <CLR=33>⚠<CLR=0> Rspack performance recommendations:
  <CLR=33>│<CLR=0> You can limit the size of your bundles by using import() to lazy load some parts of your application.
  <CLR=33>│<CLR=0> For more info visit https://www.rspack.dev/guide/optimization/code-splitting
<CLR=0>

Rspack x.x.x compiled with <CLR=33,BOLD>3 warnings</CLR> in X s"
`;

exports[`StatsTestCases should print correct stats for performance-oversize-limit-error 1`] = `
"asset <CLR=32,BOLD>main.js</CLR> 294 KiB <CLR=32,BOLD>[emitted]</CLR> (name: main)
asset <CLR=32,BOLD>sec.js</CLR> 294 KiB <CLR=32,BOLD>[emitted]</CLR> (name: sec)
Entrypoint <CLR=BOLD>main</CLR> 294 KiB = <CLR=32,BOLD>main.js</CLR>
Entrypoint <CLR=BOLD>sec</CLR> 294 KiB = <CLR=32,BOLD>sec.js</CLR>
<CLR=BOLD>./index.js</CLR> 16 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./index2.js</CLR> 16 bytes <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>
<CLR=BOLD>./a.js</CLR> 293 KiB <CLR=33,BOLD>[built]</CLR> <CLR=33,BOLD>[code generated]</CLR>

<CLR=31,BOLD>ERROR</CLR> in <CLR=31>×<CLR=0> asset size limit: The following asset(s) exceed the recommended size limit (244.141 KiB). This can impact web performance.
  <CLR=31>│<CLR=0> Assets:
  <CLR=31>│<CLR=0>   main.js (293.965 KiB)
  <CLR=31>│<CLR=0>   sec.js (293.965 KiB)
<CLR=0>

<CLR=31,BOLD>ERROR</CLR> in <CLR=31>×<CLR=0> entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (244.141 KiB). This can impact web performance.
  <CLR=31>│<CLR=0> Entrypoints:
  <CLR=31>│<CLR=0>   main (293.965 KiB)
  <CLR=31>│<CLR=0>       main.js
  <CLR=31>│<CLR=0>   sec (293.965 KiB)
  <CLR=31>│<CLR=0>       sec.js
<CLR=0>

<CLR=31,BOLD>ERROR</CLR> in <CLR=31>×<CLR=0> Rspack performance recommendations:
  <CLR=31>│<CLR=0> You can limit the size of your bundles by using import() to lazy load some parts of your application.
  <CLR=31>│<CLR=0> For more info visit https://www.rspack.dev/guide/optimization/code-splitting
<CLR=0>

Rspack x.x.x compiled with <CLR=31,BOLD>3 errors</CLR> in X s"
`;

exports[`StatsTestCases should print correct stats for split-chunks 1`] = `
"default:
  Entrypoint main 9.11 KiB = default/main.js
  Entrypoint a 8.67 KiB = default/a.js
  Entrypoint b 226 bytes = default/b.js
  Entrypoint c 226 bytes = default/c.js
  chunk (runtime: main) default/async-c.js (async-c) 116 bytes <{909}> ={416}= ={418}= ={581}= ={753}=
    ./c.js
  chunk (runtime: main) default/async-a.js (async-a) 185 bytes <{909}> ={310}= ={418}= ={753}= >{581}< >{912}<
    ./a.js
    ./e.js
  chunk (runtime: main) default/async-b.js (async-b) 116 bytes <{909}> ={310}= ={418}= ={581}= ={753}=
    ./b.js
  chunk (runtime: main) default/310.js 20 bytes <{909}> ={250}= ={262}= ={418}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/y.js
  chunk (runtime: main) default/416.js 20 bytes <{909}> ={172}= ={418}= ={581}= ={753}= split chunk (cache group: defaultVendors)
    ./node_modules/z.js
  chunk (runtime: main) default/418.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={310}= ={416}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/x.js
  chunk (runtime: a, main) default/581.js 20 bytes <{250}> <{310}> <{418}> <{74}> <{753}> <{909}> ={172}= ={262}= ={310}= ={416}= ={418}= ={753}= ={912}= split chunk (cache group: default)
    ./f.js
  chunk (runtime: a) default/a.js (a) 1.56 KiB (runtime) 165 bytes (javascript) >{581}< >{912}< [entry]
    ./a.js
  chunk (runtime: b) default/b.js (b) 116 bytes [entry]
    ./b.js
  chunk (runtime: main) default/753.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={310}= ={416}= ={418}= ={581}= >{581}< >{912}< split chunk (cache group: default)
    ./d.js
  chunk (runtime: c) default/c.js (c) 116 bytes [entry]
    ./c.js
  chunk (runtime: main) default/main.js (main) 1.56 KiB (runtime) 147 bytes (javascript) >{172}< >{250}< >{262}< >{310}< >{416}< >{418}< >{581}< >{753}< [entry]
    ./index.js
  chunk (runtime: a, main) default/async-g.js (async-g) 45 bytes <{250}> <{310}> <{418}> <{74}> <{753}> ={581}=
    ./g.js
  default (Rspack x.x.x) compiled successfully

all-chunks:
  Entrypoint main 9.21 KiB = all-chunks/main.js
  Entrypoint a 11.1 KiB = all-chunks/272.js 1.22 KiB all-chunks/a.js 9.87 KiB
  Entrypoint b 5.46 KiB = all-chunks/async-b.js 1.07 KiB all-chunks/b.js 4.39 KiB
  Entrypoint c 5.46 KiB = all-chunks/async-c.js 1.07 KiB all-chunks/c.js 4.39 KiB
  chunk (runtime: c, main) all-chunks/async-c.js (async-c) 116 bytes <{909}> ={416}= ={418}= ={581}= ={753}= ={76}= [initial]
    ./c.js
  chunk (runtime: main) all-chunks/async-a.js (async-a) 20 bytes <{909}> ={272}= ={310}= ={418}= ={753}= >{581}< >{912}<
    ./e.js
  chunk (runtime: b, main) all-chunks/async-b.js (async-b) 116 bytes <{909}> ={310}= ={418}= ={581}= ={751}= ={753}= [initial]
    ./b.js
  chunk (runtime: a, main) all-chunks/272.js 165 bytes <{909}> ={250}= ={310}= ={418}= ={74}= ={753}= >{581}< >{912}< [initial] split chunk (cache group: default)
    ./a.js
  chunk (runtime: main) all-chunks/310.js 20 bytes <{909}> ={250}= ={262}= ={272}= ={418}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/y.js
  chunk (runtime: main) all-chunks/416.js 20 bytes <{909}> ={172}= ={418}= ={581}= ={753}= split chunk (cache group: defaultVendors)
    ./node_modules/z.js
  chunk (runtime: main) all-chunks/418.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={272}= ={310}= ={416}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/x.js
  chunk (runtime: a, main) all-chunks/581.js 20 bytes <{250}> <{272}> <{310}> <{418}> <{74}> <{753}> <{909}> ={172}= ={262}= ={310}= ={416}= ={418}= ={753}= ={912}= split chunk (cache group: default)
    ./f.js
  chunk (runtime: a) all-chunks/a.js (a) 1.88 KiB ={272}= >{581}< >{912}< [entry]
  chunk (runtime: b) all-chunks/b.js (b) 800 bytes ={262}= [entry]
  chunk (runtime: main) all-chunks/753.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={272}= ={310}= ={416}= ={418}= ={581}= >{581}< >{912}< split chunk (cache group: default)
    ./d.js
  chunk (runtime: c) all-chunks/c.js (c) 800 bytes ={172}= [entry]
  chunk (runtime: main) all-chunks/main.js (main) 147 bytes (javascript) 1.72 KiB (runtime) >{172}< >{250}< >{262}< >{272}< >{310}< >{416}< >{418}< >{581}< >{753}< [entry]
    ./index.js
  chunk (runtime: a, main) all-chunks/async-g.js (async-g) 45 bytes <{250}> <{272}> <{310}> <{418}> <{74}> <{753}> ={581}=
    ./g.js
  all-chunks (Rspack x.x.x) compiled successfully

manual:
  Entrypoint main 8.88 KiB = manual/main.js
  Entrypoint a 10.9 KiB = manual/vendors.js 484 bytes manual/a.js 10.4 KiB
  Entrypoint b 4.91 KiB = manual/vendors.js 484 bytes manual/b.js 4.43 KiB
  Entrypoint c 4.91 KiB = manual/vendors.js 484 bytes manual/c.js 4.43 KiB
  chunk (runtime: main) manual/async-c.js (async-c) 156 bytes <{909}> ={192}=
    ./c.js
    ./d.js
    ./f.js
  chunk (runtime: a, b, c, main) manual/vendors.js (vendors) 60 bytes <{909}> ={172}= ={250}= ={262}= ={74}= ={751}= ={76}= >{912}< [initial] split chunk (cache group: vendors)
    ./node_modules/x.js
    ./node_modules/y.js
    ./node_modules/z.js
  chunk (runtime: main) manual/async-a.js (async-a) 205 bytes <{909}> ={192}= >{912}<
    ./a.js
    ./d.js
    ./e.js
  chunk (runtime: main) manual/async-b.js (async-b) 156 bytes <{909}> ={192}=
    ./b.js
    ./d.js
    ./f.js
  chunk (runtime: a) manual/a.js (a) 1.72 KiB (runtime) 165 bytes (javascript) ={192}= >{912}< [entry]
    ./a.js
  chunk (runtime: b) manual/b.js (b) 116 bytes (javascript) 480 bytes (runtime) ={192}= [entry]
    ./b.js
  chunk (runtime: c) manual/c.js (c) 116 bytes (javascript) 480 bytes (runtime) ={192}= [entry]
    ./c.js
  chunk (runtime: main) manual/main.js (main) 147 bytes (javascript) 1.56 KiB (runtime) >{172}< >{192}< >{250}< >{262}< [entry]
    ./index.js
  chunk (runtime: a, main) manual/async-g.js (async-g) 65 bytes <{192}> <{250}> <{74}>
    ./f.js
    ./g.js
  manual (Rspack x.x.x) compiled successfully

name-too-long:
  Entrypoint main 9.22 KiB = name-too-long/main.js
  Entrypoint aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 11.1 KiB = name-too-long/272.js 1.22 KiB name-too-long/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.js 9.87 KiB
  Entrypoint bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb 5.46 KiB = name-too-long/async-b.js 1.07 KiB name-too-long/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb.js 4.39 KiB
  Entrypoint cccccccccccccccccccccccccccccc 5.46 KiB = name-too-long/async-c.js 1.07 KiB name-too-long/cccccccccccccccccccccccccccccc.js 4.39 KiB
  chunk (runtime: cccccccccccccccccccccccccccccc, main) name-too-long/async-c.js (async-c) 116 bytes <{909}> ={325}= ={416}= ={418}= ={581}= ={753}= [initial]
    ./c.js
  chunk (runtime: bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) name-too-long/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb.js (bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb) 800 bytes ={262}= [entry]
  chunk (runtime: main) name-too-long/async-a.js (async-a) 20 bytes <{909}> ={272}= ={310}= ={418}= ={753}= >{581}< >{912}<
    ./e.js
  chunk (runtime: bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, main) name-too-long/async-b.js (async-b) 116 bytes <{909}> ={225}= ={310}= ={418}= ={581}= ={753}= [initial]
    ./b.js
  chunk (runtime: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, main) name-too-long/272.js 165 bytes <{909}> ={250}= ={310}= ={418}= ={753}= ={959}= >{581}< >{912}< [initial] split chunk (cache group: default)
    ./a.js
  chunk (runtime: main) name-too-long/310.js 20 bytes <{909}> ={250}= ={262}= ={272}= ={418}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/y.js
  chunk (runtime: cccccccccccccccccccccccccccccc) name-too-long/cccccccccccccccccccccccccccccc.js (cccccccccccccccccccccccccccccc) 800 bytes ={172}= [entry]
  chunk (runtime: main) name-too-long/416.js 20 bytes <{909}> ={172}= ={418}= ={581}= ={753}= split chunk (cache group: defaultVendors)
    ./node_modules/z.js
  chunk (runtime: main) name-too-long/418.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={272}= ={310}= ={416}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/x.js
  chunk (runtime: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, main) name-too-long/581.js 20 bytes <{250}> <{272}> <{310}> <{418}> <{753}> <{909}> <{959}> ={172}= ={262}= ={310}= ={416}= ={418}= ={753}= ={912}= split chunk (cache group: default)
    ./f.js
  chunk (runtime: main) name-too-long/753.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={272}= ={310}= ={416}= ={418}= ={581}= >{581}< >{912}< split chunk (cache group: default)
    ./d.js
  chunk (runtime: main) name-too-long/main.js (main) 147 bytes (javascript) 1.72 KiB (runtime) >{172}< >{250}< >{262}< >{272}< >{310}< >{416}< >{418}< >{581}< >{753}< [entry]
    ./index.js
  chunk (runtime: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, main) name-too-long/async-g.js (async-g) 45 bytes <{250}> <{272}> <{310}> <{418}> <{753}> <{959}> ={581}=
    ./g.js
  chunk (runtime: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa) name-too-long/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.js (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa) 1.88 KiB ={272}= >{581}< >{912}< [entry]
  name-too-long (Rspack x.x.x) compiled successfully

custom-chunks-filter:
  Entrypoint main 9.19 KiB = custom-chunks-filter/main.js
  Entrypoint a 8.68 KiB = custom-chunks-filter/a.js
  Entrypoint b 5.46 KiB = custom-chunks-filter/async-b.js 1.07 KiB custom-chunks-filter/b.js 4.39 KiB
  Entrypoint c 5.46 KiB = custom-chunks-filter/async-c.js 1.07 KiB custom-chunks-filter/c.js 4.39 KiB
  chunk (runtime: c, main) custom-chunks-filter/async-c.js (async-c) 116 bytes <{909}> ={416}= ={418}= ={581}= ={753}= ={76}= [initial]
    ./c.js
  chunk (runtime: main) custom-chunks-filter/async-a.js (async-a) 185 bytes <{909}> ={310}= ={418}= ={753}= >{581}< >{912}<
    ./a.js
    ./e.js
  chunk (runtime: b, main) custom-chunks-filter/async-b.js (async-b) 116 bytes <{909}> ={310}= ={418}= ={581}= ={751}= ={753}= [initial]
    ./b.js
  chunk (runtime: main) custom-chunks-filter/310.js 20 bytes <{909}> ={250}= ={262}= ={418}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/y.js
  chunk (runtime: main) custom-chunks-filter/416.js 20 bytes <{909}> ={172}= ={418}= ={581}= ={753}= split chunk (cache group: defaultVendors)
    ./node_modules/z.js
  chunk (runtime: main) custom-chunks-filter/418.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={310}= ={416}= ={581}= ={753}= >{581}< >{912}< split chunk (cache group: defaultVendors)
    ./node_modules/x.js
  chunk (runtime: a, main) custom-chunks-filter/581.js 20 bytes <{250}> <{310}> <{418}> <{74}> <{753}> <{909}> ={172}= ={262}= ={310}= ={416}= ={418}= ={753}= ={912}= split chunk (cache group: default)
    ./f.js
  chunk (runtime: a) custom-chunks-filter/a.js (a) 165 bytes (javascript) 1.56 KiB (runtime) >{581}< >{912}< [entry]
    ./a.js
  chunk (runtime: b) custom-chunks-filter/b.js (b) 800 bytes ={262}= [entry]
  chunk (runtime: main) custom-chunks-filter/753.js 20 bytes <{909}> ={172}= ={250}= ={262}= ={310}= ={416}= ={418}= ={581}= >{581}< >{912}< split chunk (cache group: default)
    ./d.js
  chunk (runtime: c) custom-chunks-filter/c.js (c) 800 bytes ={172}= [entry]
  chunk (runtime: main) custom-chunks-filter/main.js (main) 1.72 KiB (runtime) 147 bytes (javascript) >{172}< >{250}< >{262}< >{310}< >{416}< >{418}< >{581}< >{753}< [entry]
    ./index.js
  chunk (runtime: a, main) custom-chunks-filter/async-g.js (async-g) 45 bytes <{250}> <{310}> <{418}> <{74}> <{753}> ={581}=
    ./g.js
  custom-chunks-filter (Rspack x.x.x) compiled successfully

custom-chunks-filter-in-cache-groups:
  Entrypoint main 8.91 KiB = custom-chunks-filter-in-cache-groups/main.js
  Entrypoint a 9.32 KiB = custom-chunks-filter-in-cache-groups/a.js
  Entrypoint b 4.91 KiB = custom-chunks-filter-in-cache-groups/vendors.js 484 bytes custom-chunks-filter-in-cache-groups/b.js 4.43 KiB
  Entrypoint c 4.91 KiB = custom-chunks-filter-in-cache-groups/vendors.js 484 bytes custom-chunks-filter-in-cache-groups/c.js 4.43 KiB
  chunk (runtime: main) custom-chunks-filter-in-cache-groups/async-c.js (async-c) 156 bytes <{909}> ={192}=
    ./c.js
    ./d.js
    ./f.js
  chunk (runtime: b, c, main) custom-chunks-filter-in-cache-groups/vendors.js (vendors) 60 bytes <{909}> ={172}= ={250}= ={262}= ={751}= ={76}= >{912}< [initial] split chunk (cache group: vendors)
    ./node_modules/x.js
    ./node_modules/y.js
    ./node_modules/z.js
  chunk (runtime: main) custom-chunks-filter-in-cache-groups/async-a.js (async-a) 205 bytes <{909}> ={192}= >{912}<
    ./a.js
    ./d.js
    ./e.js
  chunk (runtime: main) custom-chunks-filter-in-cache-groups/async-b.js (async-b) 156 bytes <{909}> ={192}=
    ./b.js
    ./d.js
    ./f.js
  chunk (runtime: a) custom-chunks-filter-in-cache-groups/a.js (a) 225 bytes (javascript) 1.56 KiB (runtime) >{912}< [entry]
    ./a.js
    ./node_modules/x.js
    ./node_modules/y.js
    ./node_modules/z.js
  chunk (runtime: b) custom-chunks-filter-in-cache-groups/b.js (b) 116 bytes (javascript) 480 bytes (runtime) ={192}= [entry]
    ./b.js
  chunk (runtime: c) custom-chunks-filter-in-cache-groups/c.js (c) 116 bytes (javascript) 480 bytes (runtime) ={192}= [entry]
    ./c.js
  chunk (runtime: main) custom-chunks-filter-in-cache-groups/main.js (main) 147 bytes (javascript) 1.56 KiB (runtime) >{172}< >{192}< >{250}< >{262}< [entry]
    ./index.js
  chunk (runtime: a, main) custom-chunks-filter-in-cache-groups/async-g.js (async-g) 65 bytes <{192}> <{250}> <{74}>
    ./f.js
    ./g.js
  custom-chunks-filter-in-cache-groups (Rspack x.x.x) compiled successfully"
`;
